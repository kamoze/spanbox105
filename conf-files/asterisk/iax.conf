;!
;! Automatically generated configuration file
;! Filename: iax.conf (/etc/asterisk/iax.conf)
;! Generator: Manager
;! Creation Date: Sun Aug  4 15:54:57 2013
;!

; Inter-Asterisk eXchange driver definition
;
; This configuration is re-read at reload
; or with the CLI command
; 	reload chan_iax2.so
;
; General settings, like port number to bind to, and
; an option address (the default is to bind to all
; local addresses).
;
[general]
bandwidth = low
jitterbuffer = no
forcejitterbuffer = no
autokill = yes
requirecalltoken = no

adsi = no
authdebug = yes
bindport = 4569
codecpriority = caller
delayreject = no
iaxcompat = no
iaxmaxthreadcount = 100
iaxthreadcount = 100
language = en
maxjitterbuffer = 1000
maxjitterinterps = 10
maxregexpire = 120
minregexpire = 120
mohinterpret = default
nochecksums = no
resyncthreshold = 1000
trunkfreq = 20
trunktimestamps = no
calltokenoptional = 10.88.88.88



auth = md5


tos = ef
disallow = all
allow = undefined,gsm

;
; The 'maxcallnumbers_nonvalidated' is used to set the combined number of call
; numbers that can be allocated for connections where call token  validation
; has been disabled.  Unlike the 'maxcallnumbers' option, this limit is not
; separate for each individual IP address.  Any connection resulting in a
; non-call token validated call number being allocated contributes to this
; limit.  For use cases, see the call token user guide.  This option's 
; default value of 8192 should be sufficient in most cases.
;
;maxcallnumbers_nonvalidated=1024
;
; The [callnumberlimits] section allows custom call number limits to be set
; for specific IP addresses and IP address ranges.  These limits take precedence
; over the global 'maxcallnumbers' option, but may still be overridden by a
; peer defined 'maxcallnumbers' entry.  Note that these limits take effect
; for every individual address within the range, not the range as a whole. 
;
;[callnumberlimits]
;10.1.1.0/255.255.255.0 = 24
;10.1.2.0/255.255.255.0 = 32
;

; The shrinkcallerid function removes '(', ' ', ')', non-trailing '.', and '-' not
; in square brackets.  For example, the caller id value 555.5555 becomes 5555555
; when this option is enabled.  Disabling this option results in no modification
; of the caller id value, which is necessary when the caller id represents something
; that must be preserved.  This option can only be used in the [general] section.
; By default this option is on.
;
;shrinkcallerid=yes     ; on by default

; Guest sections for unauthenticated connection attempts.  Just specify an
; empty secret, or provide no secret section.
;
[guest]
type = user
context = default
callerid = "Guest IAX User"

;
; Trust Caller*ID Coming from iaxtel.com
;
[iaxtel]
type = user
context = default
auth = rsa
inkeys = iaxtel

;
; Trust Caller*ID Coming from iax.fwdnet.net
;
[iaxfwd]
type = user
context = default
auth = rsa
inkeys = freeworlddialup

;
; Trust callerid delivered over DUNDi/e164
;
;
;[dundi]
;type=user
;dbsecret=dundi/secret
;context=dundi-e164-local

;
; Further user sections may be added, specifying a context and a secret used
; for connections with that given authentication name.  Limited IP based
; access control is allowed by use of "permit" and "deny" keywords.  Multiple
; rules are permitted.  Multiple permitted contexts may be specified, in
; which case the first will be the default.  You can also override caller*ID
; so that when you receive a call you set the Caller*ID to be what you want
; instead of trusting what the remote user provides
;
; There are three authentication methods that are supported:  md5, plaintext,
; and rsa.  The least secure is "plaintext", which sends passwords cleartext
; across the net.  "md5" uses a challenge/response md5 sum arrangement, but
; still requires both ends have plain text access to the secret.  "rsa" allows
; unidirectional secret knowledge through public/private keys.  If "rsa"
; authentication is used, "inkeys" is a list of acceptable public keys on the
; local system that can be used to authenticate the remote peer, separated by
; the ":" character.  "outkey" is a single, private key to use to authenticate
; to the other side.  Public keys are named /var/lib/asterisk/keys/<name>.pub
; while private keys are named /var/lib/asterisk/keys/<name>.key.  Private
; keys should always be 3DES encrypted.
;
;
; NOTE: All hostnames and IP addresses in this file are for example purposes
;       only; you should not expect any of them to actually be available for
;       your use.
;
;
;[markster]
;type=user
;context=default
;context=local
;auth=md5,plaintext,rsa
;secret=markpasswd
;setvar=ATTENDED_TRANSFER_COMPLETE_SOUND=beep   ; This channel variable will
; cause the given audio file to
; be played upon completion of
; an attended transfer.
;dbsecret=mysecrets/place	; Secrets can be stored in astdb, too
;transfer=no		; Disable IAX native transfer
;transfer=mediaonly	; When doing IAX native transfers, transfer
; only media stream
;jitterbuffer=yes	; Override global setting an enable jitter buffer
;			; for this user
;maxauthreq=10          ; Set maximum number of outstanding AUTHREQs waiting for replies. Any further authentication attempts will be blocked
;                       ; if this limit is reached until they expire or a reply is received.
;callerid="Mark Spencer" <(256) 428-6275>
;deny=0.0.0.0/0.0.0.0
;accountcode=markster0101
;permit=209.16.236.73/255.255.255.0
;language=en		; Use english as default language
;encryption=yes ; Enable IAX2 encryption.  The default is no.
;keyrotate=off ; This is a compatibility option for older versions of
;              ; IAX2 that do not support key rotation with encryption.
;              ; This option will disable the IAX_COMMAND_RTENC message.
;              ; default is on.
;              ;
;
; Peers may also be specified, with a secret and
; a remote hostname.
;
[demo]

[sb105]
type = friend
trunk = yes
username = sb105
secret = v01p
host = dynamic
context = DID_trunk_1
auth = md5
qualify = yes
nat = yes

[3671]
type = friend
trunk = yes
username = 3671
secret = v01p
host = dynamic
context = DID_trunk_1
auth = md5
qualify = yes
nat = yes
[callnumberlimits]
